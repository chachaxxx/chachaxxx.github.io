(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{753:function(t,e,v){"use strict";v.r(e);var _=v(1),s=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"事件流"}},[t._v("事件流")]),t._v(" "),v("p",[t._v("事件流描述的是从页面中接收事件的顺序。")]),t._v(" "),v("p",[t._v("事件发生时会在元素节点之间从内向外逐级传播，这个传播过程即DOM事件流。")]),t._v(" "),v("ul",[v("li",[v("p",[v("code",[t._v("事件捕获")]),t._v("：事件从最不精确的对象(document 对象)开始触发，然后到最精确(也可以在窗口级别捕获事件，不过必须由开发人员特别指定)。")]),t._v(" "),v("blockquote",[v("p",[t._v("Capture：从外到内")])])]),t._v(" "),v("li",[v("p",[v("code",[t._v("事件目标")]),t._v("：当到达目标元素之后，执行目标元素该事件相应的处理函数。如果没有绑定监听函数，那就不执行。")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("事件冒泡")]),t._v("：事件按照从最特定的事件目标到最不特定的事件目标(document对象)的顺序触发，当一个元素接收到事件的时候会把他接收到的事件传给自己的父级，一直到window 。")]),t._v(" "),v("blockquote",[v("p",[t._v("Bubbling ：从内到外")])])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://www.w3.org/TR/DOM-Level-3-Events/images/eventflow.svg",alt:"Graphical representation of an event dispatched in a DOM tree using the DOM event flow"}})]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[t._v("element"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listener"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" useCapture"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// type: 监听事件类型的字符串")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// listener:事件监听回调函数，即事件触发后要处理的函数")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// useCapture:默认值false，表示事件冒泡；设为true时，表示事件捕获")]),t._v("\n")])])]),v("h2",{attrs:{id:"事件对象"}},[t._v("事件对象")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("event 就是一个事件对象，写道我们的侦听函数的小括号里面，当形参来看")])]),t._v(" "),v("li",[v("p",[t._v("事件对象只有有了事件才会存在，他是系统给我们自动创建的，不需要我们传递参数")])]),t._v(" "),v("li",[v("p",[t._v("事件对象是我们的事件的一系列相关数据的集合，比如鼠标点击里面就包含了鼠标的相关信息")])])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("事件对象属性方法")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[v("code",[t._v("e.target")])]),t._v(" "),v("td",[t._v("返回触发事件的对象  "),v("strong",[t._v("标准")])])]),t._v(" "),v("tr",[v("td",[t._v("e.type")]),t._v(" "),v("td",[t._v("返回事件的类型，比如click、mouseover等，不带 on")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("e.preventDefaule()")])]),t._v(" "),v("td",[v("code",[t._v("该方法阻止默认事件（默认行为）标准 ，比如不让链接跳转")])])]),t._v(" "),v("tr",[v("td",[v("strong",[v("code",[t._v("e.stopPropagation()")])])]),t._v(" "),v("td",[v("code",[t._v("阻止冒泡，标准")])])])])]),t._v(" "),v("h2",{attrs:{id:"阻止对象默认行为（重）"}},[t._v("阻止对象默认行为（重）")]),t._v(" "),v("p",[t._v("比如点击链接在不适合的情况下不能转跳。表单按钮阻止提交。改变网页右键菜单。")]),t._v(" "),v("p",[t._v("三种方法：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("e.preventDefaule();")]),t._v(" 是一个方法，适合普通浏览器")]),t._v(" "),v("li",[t._v("e.returnValue; 是一个属性，适用于 IE 6 7 8")]),t._v(" "),v("li",[t._v("return false; 没有兼容性问题，但是需要注意后面的语句就不执行了，直接跳出")])]),t._v(" "),v("h2",{attrs:{id:"阻止冒泡（重）"}},[t._v("阻止冒泡（重）")]),t._v(" "),v("p",[t._v("在一些场景中，比如当外层元素包裹内层按钮，点击内层按钮事件会以冒泡的形式传递到外层元素上，同时激活外层元素的相应事件，而这并不是我们想要的，我们只是想激活内层按钮的事件，这种场景就需要阻止事件冒泡。")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("event.stopPropagation(); // 一般浏览器停止冒泡")])]),t._v(" "),v("li",[t._v("event.cancelBubble; // IE 6 7 8 的停止冒泡")])]),t._v(" "),v("h2",{attrs:{id:"不冒泡的事件"}},[t._v("不冒泡的事件")]),t._v(" "),v("p",[t._v("有：")]),t._v(" "),v("p",[t._v("​    ①focus")]),t._v(" "),v("p",[t._v("​    ②blur // 聚焦")]),t._v(" "),v("p",[t._v("​    ③mouseenter")]),t._v(" "),v("p",[t._v("​    ④mouseleave  // 鼠标")]),t._v(" "),v("p",[t._v("​    ⑤load")]),t._v(" "),v("p",[t._v("​    ⑥unload")]),t._v(" "),v("p",[t._v("​    ⑦resize // 装载")]),t._v(" "),v("h1",{attrs:{id:"事件委托"}},[t._v("事件委托")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("是什么："),v("strong",[t._v("事件委托就是利用事件冒泡或事件捕获的机制把一系列的内层元素事件绑定到外层元素。")])])]),t._v(" "),v("li",[v("p",[t._v("为什么：对于嵌套结构的dom元素，每个元素都绑定监听函数，增大dom与交互开支，会降低页面性能。事件委托可以减少DOM交互，节省内存。")])]),t._v(" "),v("li",[v("p",[t._v("怎么做：当我们点击某内部元素时，其事件会冒泡到父元素，可以根据 event 对象的相关信息处理这个事件。或者直接在父元素捕获事处理。")])])]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父元素事件")]),t._v("\nevent"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实际触发的元素")]),t._v("\n")])])]),v("h1",{attrs:{id:"在框架中的使用"}},[t._v("在框架中的使用")]),t._v(" "),v("h2",{attrs:{id:"vue"}},[t._v("vue")]),t._v(" "),v("p",[t._v("在vue中绑定事件监听器的v-on指令，有 如下修饰符:")]),t._v(" "),v("ul",[v("li",[v("code",[t._v(".stop")]),t._v(" - 调用 "),v("code",[t._v("event.stopPropagation()")]),t._v("。阻止冒泡。")]),t._v(" "),v("li",[v("code",[t._v(".prevent")]),t._v(" - 调用 "),v("code",[t._v("event.preventDefault()")]),t._v("。组织默认事件。")]),t._v(" "),v("li",[v("code",[t._v(".capture")]),t._v(" - 添加事件侦听器时使用 capture 模式。")]),t._v(" "),v("li",[v("code",[t._v(".self")]),t._v(" - 只当事件是从侦听器绑定的元素本身触发时才触发回调。")])]),t._v(" "),v("p",[t._v("或者在这个事件的处理方法中进行原生的 e.stopPropagation()")])])}),[],!1,null,null,null);e.default=s.exports}}]);