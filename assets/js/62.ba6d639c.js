(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{779:function(t,s,n){"use strict";n.r(s);var e=n(1),a=Object(e.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("|-----------------------------|\n|             组件A             |\n|        |---------------------|\n|\t\t|\t组件B            |\n|\t\t|\t\t|-------------|\n|\t\t|\t\t|    组件C  |\n|\t\t|\t\t|-------------|\n|\t\t|\t\t|    组件D |\n|\t\t|\t\t|-------------|\n|\t\t|---------------------|\n|-----------------------------|")]),t._v(" "),n("h1",{attrs:{id:"vue2组件通信方式"}},[t._v("vue2组件通信方式")]),t._v(" "),n("p",[t._v("只能用于父子组件通信：")]),t._v(" "),n("ul",[n("li",[t._v("props / v-bind（:）/  v-model")]),t._v(" "),n("li",[t._v("$emit / v-on（@）")]),t._v(" "),n("li",[t._v("$attrs / $listeners")]),t._v(" "),n("li",[t._v("ref")]),t._v(" "),n("li",[t._v("$children / $parent")])]),t._v(" "),n("p",[t._v("只能用于兄弟组件通信：")]),t._v(" "),n("ul",[n("li",[t._v("$parent")])]),t._v(" "),n("p",[t._v("跨层级组件通信：")]),t._v(" "),n("ul",[n("li",[t._v("provide/inject")]),t._v(" "),n("li",[t._v("EventBus")]),t._v(" "),n("li",[t._v("Vuex")]),t._v(" "),n("li",[t._v("$attrs / $listeners")]),t._v(" "),n("li",[t._v("$root")]),t._v(" "),n("li",[t._v("localStorage / sessionStorage")])]),t._v(" "),n("h2",{attrs:{id:"_1-props-v-bind-v-model-和-emit-v-on-（父子通信）"}},[t._v("1.props / v-bind(😃 / v-model 和 $emit / v-on(@)（父子通信）")]),t._v(" "),n("p",[t._v("父组件向子组件传递数据是通过prop传递的，子组件传递数据给父组件是通过$emit触发事件来做到的。")]),t._v(" "),n("p",[t._v("1.父组件传递了数据给子组件props，并且通过v-on绑定了一个事件来监听子组件的触发事件；\n2.子组件通过props(不可在子组件修改)得到相关的数据,最后通过this.$emit触发了相应事件;\n3.某prop.sync帮我们实现父组件向子组件传递的数据 的双向绑定，所以子组件接收到数据后"),n("strong",[t._v("可以直接修改")]),t._v("，并且会同时修改父组件的数据.")]),t._v(" "),n("p",[n("router-link",{attrs:{to:"/notes/[Vue]指令.html"}},[t._v("[vue]指令")])],1),t._v(" "),n("p",[n("strong",[t._v("v-bind到底干了什么 && $emit到底干了什么")])]),t._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.cn/post/6844904062417109005",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue源码解析事件派发（on、emit、once、off） - 掘金 (juejin.cn)"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"_2-refs（父调用子）"}},[t._v("2.refs（父调用子）")]),t._v(" "),n("p",[n("code",[t._v("ref")]),t._v(" 被用来给元素或子组件注册引用信息。引用信息将会注册在父组件的 "),n("code",[t._v("$refs")]),t._v(" 对象上。如果在"),n("strong",[t._v("普通的 DOM 元素上使用，引用指向的就是 DOM 元素")]),t._v("；如果用在"),n("strong",[t._v("子组件上，引用就指向组件实例")]),t._v(".")]),t._v(" "),n("p",[t._v("在v-for指令下的组件或者元素，引用信息将是包含 DOM 节点或组件实例的"),n("strong",[t._v("数组")])]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("hello"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\nthis.$refs.p.innerHtml\n")])])]),n("h2",{attrs:{id:"_3-children-parent（父子通信）"}},[t._v("3.$children / $parent（父子通信）")]),t._v(" "),n("blockquote",[n("h3",{attrs:{id:"parent"}},[n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#parent",target:"_blank",rel:"noopener noreferrer"}},[t._v("parent"),n("OutboundLink")],1)]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("类型")]),t._v("："),n("code",[t._v("Vue instance")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("详细")]),t._v("：")]),t._v(" "),n("p",[t._v("指定已创建的实例之父实例，在两者之间建立父子关系。子实例可以用 "),n("code",[t._v("this.$parent")]),t._v(" 访问父实例，子实例被推入父实例的 "),n("code",[t._v("$children")]),t._v(" 数组中。")]),t._v(" "),n("p",[t._v("节制地使用 "),n("code",[t._v("$parent")]),t._v(" 和 "),n("code",[t._v("$children")]),t._v(" - 它们的主要目的是作为访问组件的应急方法。更推荐用 props 和 events 实现父子组件通信")])])])]),t._v(" "),n("blockquote",[n("h3",{attrs:{id:"vm-children"}},[n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#vm-children",target:"_blank",rel:"noopener noreferrer"}},[t._v("vm.$children"),n("OutboundLink")],1)]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("类型")]),t._v("："),n("code",[t._v("Array<Vue instance>")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("只读")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("详细")]),t._v("：")]),t._v(" "),n("p",[t._v("当前实例的直接子组件。**需要注意 "),n("code",[t._v("$children")]),t._v(" 并不保证顺序，也不是响应式的。**如果你发现自己正在尝试使用 "),n("code",[t._v("$children")]),t._v(" 来进行数据绑定，考虑使用一个数组配合 "),n("code",[t._v("v-for")]),t._v(" 来生成子组件，并且使用 Array 作为真正的来源。")])])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msg\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callMsg\n")])])]),n("p",[t._v("注意：")]),t._v(" "),n("p",[t._v("​\t**边界情况：**在"),n("code",[t._v("#app")]),t._v("上拿"),n("code",[t._v("$parent")]),t._v("得到的是"),n("code",[t._v("new Vue()")]),t._v("的实例，在这实例上再拿"),n("code",[t._v("$parent")]),t._v("得到的是"),n("code",[t._v("undefined")]),t._v("，而在最底层的子组件拿"),n("code",[t._v("$children")]),t._v("是个空数组。也要注意得到"),n("code",[t._v("$parent")]),t._v("和"),n("code",[t._v("$children")]),t._v("的值不一样，"),n("code",[t._v("$children")]),t._v(" 的值是数组，而"),n("code",[t._v("$parent")]),t._v("是个对象。")]),t._v(" "),n("p",[t._v("​\t**使用：**节制地使用 "),n("code",[t._v("$parent")]),t._v(" 和 "),n("code",[t._v("$children")]),t._v(" - 它们的主要目的是作为访问组件的应急方法。更推荐用 props 和 events 实现父子组件通信")]),t._v(" "),n("h2",{attrs:{id:"_4-listeners（隔代通信）"}},[t._v("4.attrs和listeners（隔代通信）")]),t._v(" "),n("p",[t._v("Vue 2.4开始提供了attrs和listeners来解决A,C通信问题。")]),t._v(" "),n("blockquote",[n("h3",{attrs:{id:"vm-attrs"}},[n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#vm-attrs",target:"_blank",rel:"noopener noreferrer"}},[t._v("vm.$attrs"),n("OutboundLink")],1)]),t._v(" "),n("blockquote",[n("p",[t._v("2.4.0 新增")])]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("类型")]),t._v("："),n("code",[t._v("{ [key: string]: string }")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("只读")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("详细")]),t._v("：")]),t._v(" "),n("p",[t._v("包含了父作用域中不作为 prop 被识别 (且获取) 的 attribute 绑定 ("),n("code",[t._v("class")]),t._v(" 和 "),n("code",[t._v("style")]),t._v(" 除外)。当一个组件没有声明任何 prop 时，这里会包含所有父作用域的绑定 ("),n("code",[t._v("class")]),t._v(" 和 "),n("code",[t._v("style")]),t._v(" 除外)，并且可以通过 "),n("code",[t._v('v-bind="$attrs"')]),t._v(" 传入内部组件——在创建高级别的组件时非常有用。")])])])]),t._v(" "),n("p",[t._v("一般情况下：父组件通过v-bind绑定一个数据传递给子组件，子组件通过props接收到就可以在子组件的html中使用了。但是，如果父组件v-bind传递给子组件，子组件没有用props接收呢？这个时候，父组件传递过来的数据就会被挂载(赋值)到这个子组件自带的对象attrs上面，所以:attrs就是一个容器对象，这个容器对象会存放:父组件传过来的且子组件未使用props声明接收的数据。")]),t._v(" "),n("p",[t._v("**爷组件传递给孙组件的逻辑流程 **: 通过爷组件首先传递给父组件，当然父组件不在props中接收，那么爷组件传递给父组件的数据就会存放到父组件的"),n("code",[t._v("$attrs")]),t._v("对象中里面了，然后，再通过"),n("code",[t._v('v-bind="$attrs"')]),t._v("，再把这个"),n("code",[t._v("$attr")]),t._v("传递给孙组件，在孙组件中使用props就能接收到"),n("code",[t._v("$attrs")]),t._v("中的数据了，这样就实现了，祖孙之间的数据传递。")]),t._v(" "),n("blockquote",[n("h3",{attrs:{id:"vm-listeners"}},[n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#vm-listeners",target:"_blank",rel:"noopener noreferrer"}},[t._v("vm.$listeners"),n("OutboundLink")],1)]),t._v(" "),n("blockquote",[n("p",[t._v("2.4.0 新增")])]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("类型")]),t._v("："),n("code",[t._v("{ [key: string]: Function | Array<Function> }")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("只读")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("详细")]),t._v("：")]),t._v(" "),n("p",[t._v("包含了父作用域中的 (不含 "),n("code",[t._v(".native")]),t._v(" 修饰器的) "),n("code",[t._v("v-on")]),t._v(" 事件监听器。它可以通过 "),n("code",[t._v('v-on="$listeners"')]),t._v(" 传入内部组件——在创建更高层次的组件时非常有用。")])])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('// B父组件，桥梁作用\n<c v-bind="$attrs" v-on="$listeners"></c>\n\n// C孙组件，发送事件\nthis.$emit("formC")\n\n// A爷组件，接收\n<b @formC="formC">\n\n')])])]),n("h2",{attrs:{id:"_5-中央事件总线eventbus（局部、全局通信）"}},[t._v("5.中央事件总线EventBus（局部、全局通信）")]),t._v(" "),n("blockquote",[n("p",[n("code",[t._v("EventBus")]),t._v(" 又称为事件总线。在Vue中可以使用 "),n("code",[t._v("EventBus")]),t._v(" 来作为沟通桥梁的概念，就像是所有组件共用相同的事件中心，可以向该中心注册发送事件或接收事件，所以组件都可以上下平行地通知其他组件，但也就是太方便所以若使用不慎，就会造成难以维护的灾难")])]),t._v(" "),n("p",[n("strong",[t._v("新建一个Vue事件bus对象，然后通过bus.emit触发事件，bus.on监听触发的事件。")])]),t._v(" "),n("p",[t._v("初始化")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// event-bus.js")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EventBus "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.js 引入全局的事件总线")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$EventBus "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用this.$EventBus.$emit()")]),t._v("\n")])])]),n("p",[t._v("通信")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 某组件中 引入局部事件总线或者全局事件总线")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送消息")]),t._v("\n EventBus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 某组件 引入局部事件总线或者全局事件总线")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接收消息")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            EventBus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n               "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只监听一次 EventBus.$once(channel: string, callback(payload1,…))")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移除 EventBus.$off(channel: string)")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("缺点")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("可读性比较差。")])]),t._v(" "),n("li",[n("p",[t._v("组件间只能通过消息通信，无法共享相关数据。")])])]),t._v(" "),n("h2",{attrs:{id:"_6-provide-inject-祖先向子"}},[t._v("6.provide/ inject (祖先向子)")]),t._v(" "),n("p",[t._v("父组件中通过"),n("code",[t._v("provide")]),t._v("来提供变量, 然后再子孙组件中通过"),n("code",[t._v("inject")]),t._v("来注入变量")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("类型")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("provide")]),t._v("："),n("code",[t._v("Object | () => Object")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("provide")]),t._v(" 选项应该是一个对象或返回一个对象的函数。")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("inject")]),t._v("："),n("code",[t._v("Array<string> | { [key: string]: string | Symbol | Object }")])]),t._v(" "),n("p",[n("code",[t._v("inject")]),t._v(" 选项应该是：")]),t._v(" "),n("ul",[n("li",[t._v("一个字符串数组")]),t._v(" "),n("li",[t._v("一个对象，对象的 key 是本地的绑定名，value 是：\n"),n("ul",[n("li",[t._v("在可用的注入内容中搜索用的 key (字符串或 Symbol)，或")]),t._v(" "),n("li",[t._v("一个对象，该对象的：\n"),n("ul",[n("li",[n("code",[t._v("from")]),t._v(" property 是在可用的注入内容中搜索用的 key (字符串或 Symbol)")]),t._v(" "),n("li",[n("code",[t._v("default")]),t._v(" property 是降级情况下使用的 value")])])])])])])])])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父级组件提供 'foo'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Provider "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  provide"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    foo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子组件注入 'foo'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Child "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  inject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("created")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "bar"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"_7-vuex（全局通信）"}},[t._v("7.Vuex（全局通信）")]),t._v(" "),n("p",[t._v("重点，详看")]),t._v(" "),n("p",[n("a",{attrs:{href:"./%5BVue%5DVuex"}},[t._v("vuex")])]),t._v(" "),n("h2",{attrs:{id:"_8-localstorage-sessionstorage"}},[t._v("8.localStorage / sessionStorage")]),t._v(" "),n("p",[t._v("仅在客户端（即浏览器）中保存，"),n("strong",[t._v("不参与和服务器的通信的本地存储")]),t._v("。")]),t._v(" "),n("p",[t._v("这种通信比较简单,缺点是数据和状态比较混乱,不太容易维护。 通过"),n("code",[t._v("window.localStorage.getItem(key)")]),t._v("获取数据 通过"),n("code",[t._v("window.localStorage.setItem(key,value)")]),t._v("存储数据")]),t._v(" "),n("blockquote",[n("p",[t._v("注意用"),n("code",[t._v("JSON.parse()")]),t._v(" / "),n("code",[t._v("JSON.stringify()")]),t._v(" 做数据格式转换 "),n("code",[t._v("localStorage")]),t._v(" / "),n("code",[t._v("sessionStorage")]),t._v("可以结合"),n("code",[t._v("vuex")]),t._v(", 实现数据的持久保存,同时使用vuex解决数据和状态混乱问题.")])]),t._v(" "),n("p",[n("strong",[t._v("区别")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("localStorage：除非被手动清除，否则将会永久保存。会话之间共享，可跨页面。")])]),t._v(" "),n("li",[n("p",[t._v("sessionStorage： 仅在当前网页会话下有效，关闭页面或浏览器后就会被清除。会话之间不共享。")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);