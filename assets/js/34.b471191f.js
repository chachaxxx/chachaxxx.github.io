(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{755:function(t,v,_){"use strict";_.r(v);var s=_(1),e=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"事件循环（eventloop）"}},[t._v("事件循环（EventLoop）")]),t._v(" "),_("p",[t._v("js是一种单线程语言。也就是说只有一个主线程处理函数调用栈，依次进行调用。容易造成阻塞，降低效率。")]),t._v(" "),_("p",[t._v("同步任务会在调用栈中按照顺序等待主线程依次执行，异步任务会在异步任务有了结果后，将")]),t._v(" "),_("p",[t._v("注册的"),_("strong",[t._v("回调函数")]),t._v("放入任务队列中"),_("strong",[t._v("等待主线程空闲")]),t._v("的时候（调用栈被清空），被读取到栈内等待")]),t._v(" "),_("p",[t._v("主线程的执行。")]),t._v(" "),_("p",[t._v("在事件循环中，会将"),_("strong",[t._v("同步")]),t._v("和"),_("strong",[t._v("异步")]),t._v("任务分为不同的任务队列。  任务队列有"),_("strong",[t._v("宏任务")]),t._v("和"),_("strong",[t._v("微任务")]),t._v("。")]),t._v(" "),_("p",[_("strong",[t._v("执行过程是：执行宏任务，然后执行该宏任务产生的微任务，若微任务在执行过程中产生了新的微任务，则继续执行微任务，微任务执行完毕后，再回到宏任务中进行下一轮循环。")])]),t._v(" "),_("p",[t._v("同步任务（包括函数构造时的任务）=>微任务=>宏任务")]),t._v(" "),_("h1",{attrs:{id:"宏任务"}},[t._v("宏任务")]),t._v(" "),_("ul",[_("li",[t._v("script(整体代码)")]),t._v(" "),_("li",[t._v("setTimeout")]),t._v(" "),_("li",[t._v("setInterval")]),t._v(" "),_("li",[t._v("setImmediate")]),t._v(" "),_("li",[t._v("I/O")]),t._v(" "),_("li",[t._v("UI render")])]),t._v(" "),_("h1",{attrs:{id:"微任务"}},[t._v("微任务")]),t._v(" "),_("ul",[_("li",[t._v("process.nextTick （Node）")]),t._v(" "),_("li",[t._v("Promise")]),t._v(" "),_("li",[t._v("Async/Await(实际就是promise)")]),t._v(" "),_("li",[t._v("MutationObserver(html5新特性)")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/2/27/170847d202084604~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"GitHub"}})])])}),[],!1,null,null,null);v.default=e.exports}}]);